variables:
  BRANCH_MAJOR: master
  BRANCH_TEST: development

stages:
  - sync
  - build
  - deploy

.main-runner-tags: &main-tags
  tags:
    - placeholder_ftp

.deploy-runner-tags: &deploy-tags
  tags:
    - placeholder_ftp_gcm    

.docker-login-script: &docker-login
  - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY

.docker-image-prune: &docker-image-pure
  - docker image prune -a --force --filter="label=temporary"

.change-readme-never-commit: &readme-no-commit
  - if: $CI_COMMIT_BRANCH == $BRANCH_MAJOR || $CI_COMMIT_BRANCH == $BRANCH_TEST
    changes:
      - README.md
    when: never

.change-readme-commit: &readme-commit
  - if: $CI_COMMIT_BRANCH == $BRANCH_MAJOR || $CI_COMMIT_BRANCH == $BRANCH_TEST
    changes:
      - README.md
    when: on_success

.change-docker-compose-never-commit: &docker-compose-no-commit
  - if: $CI_COMMIT_BRANCH == $BRANCH_MAJOR || $CI_COMMIT_BRANCH == $BRANCH_TEST
    changes:
      - docker-compose.yml
      - docker-compose.rcm.yml
    when: never

.is-branch-dev-test-commit: &dev-test-commit
  - if: $CI_COMMIT_BRANCH == $BRANCH_TEST || $CI_COMMIT_REF_NAME == $BRANCH_TEST

.is-branch-master-commit: &master-commit
  - if: $CI_COMMIT_BRANCH == $BRANCH_MAJOR || $CI_COMMIT_REF_NAME == $BRANCH_MAJOR

#выводим версию приложения
get_version:
  stage: .pre
  <<: *main-tags
  script:
    - 'V=`awk ''/[0-9].[0-9].[0-9]/ {gsub(/"/, ""); print $2}'' $CI_PROJECT_DIR/internal/appversion/version.go`; echo "version $V"'

#синхронизируем файл README.md
sync-file-readme:
  stage: sync
  <<: *main-tags
  rules:
    - *readme-commit
  script:
    #Главный центр мониторинга (или test)
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$GCM_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update README.md" -F content="< $CI_PROJECT_DIR/README.md" http://gitlab.cloud.gcm/api/v4/projects/709/repository/files/README.md'
    #РЦМ Санкт-Петербург
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMSPB_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update README.md" -F content="< $CI_PROJECT_DIR/README.md" http://gitlab.cloud.gcm/api/v4/projects/745/repository/files/README.md'
    #РЦМ Калининград
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMKGD_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update README.md" -F content="< $CI_PROJECT_DIR/README.md" http://gitlab.cloud.gcm/api/v4/projects/749/repository/files/README.md'
    #РЦМ Ставрополь
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMSTA_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update README.md" -F content="< $CI_PROJECT_DIR/README.md" http://gitlab.cloud.gcm/api/v4/projects/757/repository/files/README.md'
    #РЦМ Симферополь
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMSR_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update README.md" -F content="< $CI_PROJECT_DIR/README.md" http://gitlab.cloud.gcm/api/v4/projects/758/repository/files/README.md'
    #РЦМ Москва и МО
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMMSK_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update README.md" -F content="< $CI_PROJECT_DIR/README.md" http://gitlab.cloud.gcm/api/v4/projects/765/repository/files/README.md'
    #РЦМ Смоленск
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMLNX_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update README.md" -F content="< $CI_PROJECT_DIR/README.md" http://gitlab.cloud.gcm/api/v4/projects/766/repository/files/README.md'
    #РЦМ Хабаровск
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMKHA_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update README.md" -F content="< $CI_PROJECT_DIR/README.md" http://gitlab.cloud.gcm/api/v4/projects/767/repository/files/README.md'
    #РЦМ Нижний Новгород
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMNIZ_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update README.md" -F content="< $CI_PROJECT_DIR/README.md" http://gitlab.cloud.gcm/api/v4/projects/768/repository/files/README.md'
    #РЦМ Новосибирск
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMNVS_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update README.md" -F content="< $CI_PROJECT_DIR/README.md" http://gitlab.cloud.gcm/api/v4/projects/769/repository/files/README.md'
    #РЦМ Екатеринбург
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMSVE_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update README.md" -F content="< $CI_PROJECT_DIR/README.md" http://gitlab.cloud.gcm/api/v4/projects/770/repository/files/README.md'
    #РЦМ Ростов-на-Дону
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMROS_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update README.md" -F content="< $CI_PROJECT_DIR/README.md" http://gitlab.cloud.gcm/api/v4/projects/771/repository/files/README.md'

#синхронизируем файл docker-compose.yml (test или GCM)
sync-file-docker-compose:
  stage: sync
  <<: *main-tags
  rules:
    - if: $CI_COMMIT_BRANCH == $BRANCH_MAJOR || $CI_COMMIT_BRANCH == $BRANCH_TEST
      changes:
        - docker-compose.yml
      when: on_success
  script:
    #Главный центр мониторинга (или test)
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$GCM_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update docker-compose.yml" -F content="< $CI_PROJECT_DIR/docker-compose.yml" http://gitlab.cloud.gcm/api/v4/projects/709/repository/files/docker-compose.yml'

#синхронизируем файл docker-compose.rcm.yml (для РЦМ)
sync-file-docker-compose-rcm:
  stage: sync
  <<: *main-tags
  rules:
    - if: $CI_COMMIT_BRANCH == $BRANCH_MAJOR || $CI_COMMIT_BRANCH == $BRANCH_TEST
      changes:
        - docker-compose.rcm.yml
      when: on_success
  script:
    #РЦМ Санкт-Петербург
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMSPB_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update docker-compose.yml" -F content="< $CI_PROJECT_DIR/docker-compose.rcm.yml" http://gitlab.cloud.gcm/api/v4/projects/745/repository/files/docker-compose.yml'
    #РЦМ Калининград
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMKGD_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update docker-compose.yml" -F content="< $CI_PROJECT_DIR/docker-compose.rcm.yml" http://gitlab.cloud.gcm/api/v4/projects/749/repository/files/docker-compose.yml'
    #РЦМ Ставрополь
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMSTA_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update docker-compose.yml" -F content="< $CI_PROJECT_DIR/docker-compose.rcm.yml" http://gitlab.cloud.gcm/api/v4/projects/757/repository/files/docker-compose.yml'
    #РЦМ Симферополь
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMSR_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update docker-compose.yml" -F content="< $CI_PROJECT_DIR/docker-compose.rcm.yml" http://gitlab.cloud.gcm/api/v4/projects/758/repository/files/docker-compose.yml'
    #РЦМ Москва и МО
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMMSK_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update docker-compose.yml" -F content="< $CI_PROJECT_DIR/docker-compose.rcm.yml" http://gitlab.cloud.gcm/api/v4/projects/765/repository/files/docker-compose.yml'
    #РЦМ Смоленск
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMLNX_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update docker-compose.yml" -F content="< $CI_PROJECT_DIR/docker-compose.rcm.yml" http://gitlab.cloud.gcm/api/v4/projects/766/repository/files/docker-compose.yml'
    #РЦМ Хабаровск
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMKHA_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update docker-compose.yml" -F content="< $CI_PROJECT_DIR/docker-compose.rcm.yml" http://gitlab.cloud.gcm/api/v4/projects/767/repository/files/docker-compose.yml'
    #РЦМ Нижний Новгород
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMNIZ_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update docker-compose.yml" -F content="< $CI_PROJECT_DIR/docker-compose.rcm.yml" http://gitlab.cloud.gcm/api/v4/projects/768/repository/files/docker-compose.yml'
    #РЦМ Новосибирск
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMNVS_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update docker-compose.yml" -F content="< $CI_PROJECT_DIR/docker-compose.rcm.yml" http://gitlab.cloud.gcm/api/v4/projects/769/repository/files/docker-compose.yml'
    #РЦМ Екатеринбург
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMSVE_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update docker-compose.yml" -F content="< $CI_PROJECT_DIR/docker-compose.rcm.yml" http://gitlab.cloud.gcm/api/v4/projects/770/repository/files/docker-compose.yml'
    #РЦМ Ростов-на-Дону
    - 'curl -v --request PUT --header PRIVATE-TOKEN:$RCMROS_SYNC_FILES_TOKEN -F branch=master -F author_email=nobody@mail.org -F author_name=auto_sync -F commit_message="Update docker-compose.yml" -F content="< $CI_PROJECT_DIR/docker-compose.rcm.yml" http://gitlab.cloud.gcm/api/v4/projects/771/repository/files/docker-compose.yml'

#сборка тестового образа
build-test:
  stage: build
  <<: *main-tags
  rules:
    - *readme-no-commit
    - *docker-compose-no-commit
    - *dev-test-commit
  script:
    # удаляем старый образ
    - docker rmi $CI_REGISTRY_IMAGE:test || true
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --build-arg VERSION=$CI_COMMIT_SHORT_SHA --build-arg BRANCH=$BRANCH_TEST .
    # удаляем промежуточный образ с меткой temporary
    - *docker-image-pure
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:test
    - *docker-login
    - docker push $CI_REGISTRY_IMAGE:test
    - docker rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA || true

#сборка основного образа
build-prod:
  stage: build
  <<: *main-tags
  rules:
    - *readme-no-commit
    - *docker-compose-no-commit
    - *master-commit
  script:
    # удаляем старый образ
    - docker rmi $CI_REGISTRY_IMAGE:latest || true
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --build-arg VERSION=$CI_COMMIT_SHORT_SHA --build-arg BRANCH=$BRANCH_MAJOR .
    # удаляем промежуточный образ с меткой temporary
    - *docker-image-pure
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:latest
    - *docker-login
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA || true

#развёртывание тестовой сборки (пока что это будет GCM)
deploy-test:
  stage: deploy
  <<: *main-tags
  rules:
    - *readme-no-commit
    - *docker-compose-no-commit
    - *dev-test-commit
    - *master-commit
  script:
    #тест ГЦМ
    - "curl -X POST --fail -F token=$GCM_TRIGGER -F ref=master http://gitlab.cloud.gcm/api/v4/projects/709/trigger/pipeline"

#развёртывание основной сборки (все регионы)
deploy-prod:
  stage: deploy
  <<: *main-tags
  rules:
    - *readme-no-commit
    - *docker-compose-no-commit
    - if: $CI_COMMIT_BRANCH == $BRANCH_MAJOR || $CI_COMMIT_REF_NAME == $BRANCH_MAJOR
      when: manual
      allow_failure: true
  script:
    #РЦМ Санкт-Петербург
    - "curl -X POST --fail -F token=$RCMSBP_TRIGGER -F ref=master http://gitlab.cloud.gcm/api/v4/projects/745/trigger/pipeline"
    #РЦМ Калининград
    - "curl -X POST --fail -F token=$RCMKGD_TRIGGER -F ref=master http://gitlab.cloud.gcm/api/v4/projects/749/trigger/pipeline"
    #РЦМ Ставрополь
    - "curl -X POST --fail -F token=$RCMSTA_TRIGGER -F ref=master http://gitlab.cloud.gcm/api/v4/projects/757/trigger/pipeline"
    #РЦМ Симферополь
    - "curl -X POST --fail -F token=$RCMSR_TRIGGER -F ref=master http://gitlab.cloud.gcm/api/v4/projects/758/trigger/pipeline"
    #РЦМ Москва и МО
    - "curl -X POST --fail -F token=$RCMMSK_TRIGGER -F ref=master http://gitlab.cloud.gcm/api/v4/projects/765/trigger/pipeline"
    #РЦМ Смоленск
    - "curl -X POST --fail -F token=$RCMLNX_TRIGGER -F ref=master http://gitlab.cloud.gcm/api/v4/projects/766/trigger/pipeline"
    #РЦМ Хабаровск
    - "curl -X POST --fail -F token=$RCMKHA_TRIGGER -F ref=master http://gitlab.cloud.gcm/api/v4/projects/767/trigger/pipeline"
    #РЦМ Нижний Новгород
    - "curl -X POST --fail -F token=$RCMNIZ_TRIGGER -F ref=master http://gitlab.cloud.gcm/api/v4/projects/768/trigger/pipeline"
    #РЦМ Новосибирск
    - "curl -X POST --fail -F token=$RCMNVS_TRIGGER -F ref=master http://gitlab.cloud.gcm/api/v4/projects/769/trigger/pipeline"
    #РЦМ Екатеринбург
    - "curl -X POST --fail -F token=$RCMSVE_TRIGGER -F ref=master http://gitlab.cloud.gcm/api/v4/projects/770/trigger/pipeline"
    #РЦМ Ростов-на-Дону
    - "curl -X POST --fail -F token=$RCMROS_TRIGGER -F ref=master http://gitlab.cloud.gcm/api/v4/projects/771/trigger/pipeline"
  environment: production

#развертывание сборки предназначенной для ГЦМ
deploy-prod-gcm:
  stage: deploy
  <<: *deploy-tags
  rules:
    - if: $CI_COMMIT_BRANCH == $BRANCH_TEST || $CI_COMMIT_REF_NAME == $BRANCH_TEST
  before_script:
    - echo "Start deploy placeholder_ftp application for GCM"
  script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose -f $CI_PROJECT_DIR/docker-compose.yml down 
    - docker rmi gitlab.cloud.gcm:5050/a.belyakov/placeholder_ftp:latest || true
    - docker-compose -f $CI_PROJECT_DIR/docker-compose.yml up -d --force-recreate --build


  